
//
//  CustomPickerView.m
//  AccountManagement
//
//  Created by WeiHu on 15/7/14.
//  Copyright (c) 2015å¹´ WeiHu. All rights reserved.
//

#import "CustomPickerView.h"

static CustomPickerView *shareInstance = nil;

@implementation CustomPickerView

+ (void)showInView:(UIView *)pickerSubview dataDic:(NSDictionary *)dataDic editBlcok:(EditBlcok )editBlcok hiddenBlcok:(HiddenBlcok)hiddenBlcok selectedBlcok:(SelectedBlcok)selectedBlcok
{

    if (shareInstance == nil) {
        
        shareInstance =  [CustomPickerView shareInstance];
        [pickerSubview bringSubviewToFront:shareInstance];
        [pickerSubview addSubview:shareInstance];
        
        // align pickerView from the left and right
        [pickerSubview addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"H:|-0-[shareInstance]-0-|" options:0 metrics:nil views:NSDictionaryOfVariableBindings(shareInstance)]];
        
        // align pickerView from the bottom
        NSArray *mArr = [NSLayoutConstraint constraintsWithVisualFormat:@"V:[shareInstance(==170)]-0-|" options:0 metrics:nil views:NSDictionaryOfVariableBindings(shareInstance)];
        shareInstance.topConstraint = mArr.lastObject;
        [pickerSubview addConstraints:mArr];
        
        shareInstance.topConstraint.constant = -170;
        
        shareInstance.editBlcok = editBlcok;
        shareInstance.hiddenBlcok = editBlcok;
        shareInstance.selectedBlcok = editBlcok;
        shareInstance.dataDic = dataDic;
        shareInstance.pickerSubview = pickerSubview;
    }
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(.1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        
        shareInstance.topConstraint.constant = 0;
        [UIView animateWithDuration:.3 animations:^{
            [shareInstance layoutIfNeeded];
        }completion:^(BOOL finished) {
            
        }];
    });
}

+ (CustomPickerView *)shareInstance
{
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        shareInstance = [[NSBundle mainBundle] loadNibNamed:@"CustomPickerView" owner:self options:nil].lastObject;
        shareInstance.translatesAutoresizingMaskIntoConstraints = NO;
    });
    return shareInstance;
}
- (void)awakeFromNib
{
    [super awakeFromNib];
    
    self.pickerView.dataSource = self;
    self.pickerView.delegate = self;
    
    tempArray = self.dataDic[self.dataDic.allKeys.firstObject];
    
    
   
    
}

- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView
{
    return 2;
}

- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component
{
    switch (component) {
        case 0:
        {
            return self.dataDic.allKeys.count;
        }
            break;
        case 1:
        {
            
            return  tempArray.count;
        }
            break;
        default:
            break;
    }
    return 0;
}


- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    
    if (component == 0) {
        
        tempArray = self.dataDic[self.dataDic.allKeys[row]];
        [pickerView selectRow:0 inComponent:1 animated:YES];
        
        [pickerView reloadComponent:1];
    }
}
- (UIView *)pickerView:(UIPickerView *)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(UIView *)view
{
    switch (component) {
        case 0:
        {
            UILabel *textLabel = [[UILabel alloc] init];
            textLabel.text = self.dataDic.allKeys[row];
            textLabel.font = [UIFont systemFontOfSize:18.0f];
            textLabel.textAlignment = NSTextAlignmentCenter;
            return textLabel;
        }
            break;
        case 1:
        {
            UILabel *textLabel = [[UILabel alloc] init];
            textLabel.text = tempArray[row];
            textLabel.font = [UIFont systemFontOfSize:18.0f];
            textLabel.textAlignment = NSTextAlignmentCenter;
            return textLabel;
        }
            break;
        default:
            break;
    }
    return nil;
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

- (IBAction)editBtnAction:(UIButton *)sender {
    if (self.editBlcok) {
        self.editBlcok();
    }
}

- (IBAction)hidenBtnAction:(UIButton *)sender {
    if (self.hiddenBlcok) {
        
        self.topConstraint.constant = -170;
        [UIView animateWithDuration:.3 animations:^{
            [self layoutIfNeeded];
        }completion:^(BOOL finished) {
            self.hiddenBlcok();
        }];
    }
}
@end
